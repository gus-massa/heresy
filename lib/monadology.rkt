#lang s-exp "../private/base.rkt"

(def macroset monad-do (<- := yield if)
  ((_ (>>= return guard)
      (yield exp ...))
   (return exp ...))
  ((_ (>>= return guard)
      (exp0 ...) exps ...)
   (>>= (exp0 ...) (fn (_) (make-do exps ...))))
  ((_ (>>= return guard)
      (name <- exp) exps ...)
   (>>= exp (fn (name) (make-do exps ...))))
  ((_ (>>= return guard)
      (name := exp) exps ...)
   (>>= (return exp) (fn (name) (make-do exps ...))))
  ((_ (>>= return guard)
      (if test) exps ...)
   (>>= (guard test) (fn (_) (make-do exps ...)))))