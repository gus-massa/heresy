#lang heresy

(def fn -> (iv . fns)
  (for (f in fns with iv)
    (carry (f cry))))

(def macro <L (f args ...)
  (fn (x)
    (f x args ...)))

(def macro R> (f args ...)
  (fn (x)
    (f args ... x)))

(def macro L-> (iv (f args ...) ...)
  (-> iv
      (<L f args ...)
      ...))

(def macro R-> (iv (f args ...) ...)
  (-> iv
      (R> f args ...)
      ...))

(-> '(1 2 3 4)
    (R> map (fn (x) (* x x)))
    (<L left 2)
    (R> append '(a b))
    (<L append '(a b)))

(L-> '(1 2 3 4)
     (left 2)
     (append '(a b)))

(R-> '(1 2 3 4)
     (map (fn (x) (* x x)))
     (append '(a b)))
